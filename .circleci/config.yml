version: 2.1

# Define reusable jobs
jobs:
  build:
    docker:
      - image: circleci/android:api-30-node
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2
    steps:
      - checkout
      - restore_cache:
          key: gradle-{{ checksum "build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "build.gradle" }}
      - run:
          name: Build APK
          command: ./gradlew assembleDebug
      - store_artifacts:
          path: app/build/outputs/apk/debug/app-debug.apk
          destination: apk

  test:
    docker:
      - image: circleci/android:api-30-node
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Run Tests
          command: ./gradlew test

  deploy:
    docker:
      - image: circleci/android:api-30-node
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Install ADB
          command: |
            sudo apt-get update
            sudo apt-get install -y android-tools-adb
      - run:
          name: List connected devices (for debugging)
          command: adb devices
      - run:
          name: Install APK on Emulator
          command: |
            # Start emulator (if needed)
            # echo "no" | avdmanager create avd -n test -k "system-images;android-30;google_apis;x86"
            # emulator -avd test -no-audio -no-window &
            # adb wait-for-device
            adb install app/build/outputs/apk/debug/app-debug.apk
            adb shell pm list packages | grep your.package.name

# Define workflows
workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - test