version: 2.1

jobs:
  build:
    docker:
      - image: ghcr.io/cirruslabs/flutter:3.29.3
    working_directory: ~/app
    steps:
      - checkout
        
      

      
  
      - run:
          name: Install dependencies
          command: flutter pub get

      - run:
          name: Decode Keystore
          command: echo $KEYSTORE_BASE64 | base64 --decode > android/app/my-release-key.jks

      - run:
          name: Create key.properties
          command: |
            echo "storeFile=android/app/my-release-key.jks" > key.properties
            echo "storePassword=$KEYSTORE_PASSWORD" > key.properties
            echo "keyAlias=$KEY_ALIAS" >> key.properties
            echo "keyPassword=$KEY_PASSWORD" >> key.properties
            

      - run:
          name: Build Signed APK
          command: |
            flutter build apk --release
            mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/myapp-release.apk

      - run:
          name: Build Signed AAB
          command: |
            flutter build appbundle --release
            mv build/app/outputs/bundle/release/app-release.aab build/app/outputs/bundle/release/project-release.aab

      - store_artifacts:
          path: build/app/outputs/flutter-apk/myapp-release.apk
          destination: myapp-release.apk
          

      - store_artifacts:
          path: build/app/outputs/bundle/release/project-release.aab
          destination: project-release.aab

      - run:
          name: Install jq for JSON parsing
          command: |
            apt-get update && apt-get install -y jq

      - run:
          name: Upload APK & AAB 
    command: |
      RESPONSE_APK=$(curl -s -X POST https://app2.apidoxy.com/api/v1/apps/android/upload-apk \
        -F file=@build/app/outputs/flutter-apk/myapp-release.apk \
        -F shop="cmdodf60l000028vh5otnn9fg" \
        -F version="1.0.0" \
        -F releaseNotes="Initial release" \
        -F upload_preset=unsigned_upload)

      echo "Full API Response: $RESPONSE_APK"

      if echo "$RESPONSE_APK" | jq empty >/dev/null 2>&1; then
        APK_URL=$(echo "$RESPONSE_APK" | jq -r '.secure_url')
        echo "APK URL: $APK_URL"
      else
        echo "‚ùå API did not return valid JSON."
      fi
      

      # - run:
      #     name: Upload APK & AAB to Cloudinary
      #     command: |
      #       # Upload APK
      #       RESPONSE_APK=$(curl -s -X POST https://api.cloudinary.com/v1_1/dvwxbfzhi/raw/upload \
      #         -F file=@build/app/outputs/flutter-apk/app-release.apk \
      #         -F upload_preset=unsigned_upload)

      #       APK_URL=$(echo $RESPONSE_APK | jq -r '.secure_url')
      #       echo "APK URL: $APK_URL"

      #       # Upload AAB
      #       RESPONSE_AAB=$(curl -s -X POST https://api.cloudinary.com/v1_1/dvwxbfzhi/raw/upload \
      #         -F file=@build/app/outputs/bundle/release/app-release.aab \
      #         -F upload_preset=unsigned_upload)

      #       AAB_URL=$(echo $RESPONSE_AAB | jq -r '.secure_url')
      #       echo "AAB URL: $AAB_URL"
      # - run:
      #     name: Upload APK & AAB to Cloudinary
      #     command: |
      #       # Upload APK
      #       RESPONSE_APK=$(curl -s -X POST https://api.cloudinary.com/v1_1/<your-cloud-name>/raw/upload \
      #         -F file=@build/app/outputs/flutter-apk/app-release.apk \
      #         -F upload_preset=unsigned_upload)

      #       APK_URL=$(echo $RESPONSE_APK | jq -r '.secure_url')
      #       echo "APK URL: $APK_URL"

      #       # Upload AAB
      #       RESPONSE_AAB=$(curl -s -X POST https://api.cloudinary.com/v1_1/dvwxbfzhi/raw/upload \
      #         -F file=@build/app/outputs/bundle/release/app-release.aab \
      #         -F upload_preset=unsigned_upload)

      #       AAB_URL=$(echo $RESPONSE_AAB | jq -r '.secure_url')
      #       echo "AAB URL: $AAB_URL"

            # Optional: Notify server
            # curl -X POST https://yourserver.com/api/build-complete \
            #  -H "Content-Type: application/json" \
            #  -d "{\"apk_url\":\"$APK_URL\", \"aab_url\":\"$AAB_URL\", \"build_id\":\"$CIRCLE_WORKFLOW_ID\"}"

workflows:
  build_and_upload:
    jobs:
      - build
